"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isNil2 = _interopRequireDefault(require("lodash/isNil"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _isPlainObject2 = _interopRequireDefault(require("lodash/isPlainObject"));

var _assign2 = _interopRequireDefault(require("lodash/assign"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _victoryCore = require("victory-core");

var _pathHelperMethods = require("./path-helper-methods");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Bar =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Bar, _React$Component);

  function Bar() {
    _classCallCheck(this, Bar);

    return _possibleConstructorReturn(this, (Bar.__proto__ || Object.getPrototypeOf(Bar)).apply(this, arguments));
  }

  _createClass(Bar, [{
    key: "getBarPath",
    value: function getBarPath(props, width, cornerRadius) {
      if (props.getPath) {
        return (0, _pathHelperMethods.getCustomBarPath)(props, width);
      }

      return props.horizontal ? (0, _pathHelperMethods.getHorizontalBarPath)(props, width, cornerRadius) : (0, _pathHelperMethods.getVerticalBarPath)(props, width, cornerRadius);
    }
  }, {
    key: "getPolarBarPath",
    value: function getPolarBarPath(props, cornerRadius) {
      // TODO Radial bars
      return (0, _pathHelperMethods.getVerticalPolarBarPath)(props, cornerRadius);
    }
  }, {
    key: "getBarWidth",
    value: function getBarWidth(props, style) {
      var active = props.active,
          scale = props.scale,
          data = props.data,
          datum = props.datum,
          barWidth = props.barWidth,
          defaultBarWidth = props.defaultBarWidth;

      if (barWidth) {
        return (0, _isFunction2.default)(barWidth) ? _victoryCore.Helpers.evaluateProp(barWidth, datum, active) : barWidth;
      } else if (style.width) {
        return style.width;
      }

      var range = scale.x.range();
      var extent = Math.abs(range[1] - range[0]);
      var bars = data.length + 2;
      var barRatio = props.barRatio || 0.5;
      var defaultWidth = barRatio * (data.length < 2 ? defaultBarWidth : extent / bars);
      return Math.max(1, defaultWidth);
    }
  }, {
    key: "getCornerRadiusFromObject",
    value: function getCornerRadiusFromObject(props) {
      var cornerRadius = props.cornerRadius,
          datum = props.datum,
          active = props.active;
      var realCornerRadius = {
        topLeft: 0,
        topRight: 0,
        bottomLeft: 0,
        bottomRight: 0
      };

      var updateCornerRadius = function (corner, fallback) {
        if (!(0, _isNil2.default)(cornerRadius[corner])) {
          realCornerRadius[corner] = _victoryCore.Helpers.evaluateProp(cornerRadius[corner], datum, active);
        } else if (!(0, _isNil2.default)(cornerRadius[fallback])) {
          realCornerRadius[corner] = _victoryCore.Helpers.evaluateProp(cornerRadius[fallback], datum, active);
        }
      };

      updateCornerRadius("topLeft", "top");
      updateCornerRadius("topRight", "top");
      updateCornerRadius("bottomLeft", "bottom");
      updateCornerRadius("bottomRight", "bottom");
      return realCornerRadius;
    }
  }, {
    key: "getCornerRadius",
    value: function getCornerRadius(props) {
      var cornerRadius = props.cornerRadius,
          datum = props.datum,
          active = props.active;
      var realCornerRadius = {
        topLeft: 0,
        topRight: 0,
        bottomLeft: 0,
        bottomRight: 0
      };

      if (!cornerRadius) {
        return realCornerRadius;
      }

      if ((0, _isPlainObject2.default)(cornerRadius)) {
        return this.getCornerRadiusFromObject(props);
      }

      realCornerRadius.topLeft = _victoryCore.Helpers.evaluateProp(cornerRadius, datum, active);
      realCornerRadius.topRight = _victoryCore.Helpers.evaluateProp(cornerRadius, datum, active);
      return realCornerRadius;
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          role = _props.role,
          datum = _props.datum,
          active = _props.active,
          shapeRendering = _props.shapeRendering,
          className = _props.className,
          origin = _props.origin,
          polar = _props.polar,
          pathComponent = _props.pathComponent,
          events = _props.events,
          clipPath = _props.clipPath;
      var stroke = this.props.style && this.props.style.fill || "black";
      var baseStyle = {
        fill: "black",
        stroke: stroke
      };

      var style = _victoryCore.Helpers.evaluateStyle((0, _assign2.default)(baseStyle, this.props.style), datum, active);

      var width = this.getBarWidth(this.props, style);
      var cornerRadius = this.getCornerRadius(this.props);
      var path = polar ? this.getPolarBarPath(this.props, cornerRadius) : this.getBarPath(this.props, width, cornerRadius);
      var defaultTransform = polar && origin ? "translate(".concat(origin.x, ", ").concat(origin.y, ")") : undefined;
      var transform = this.props.transform || defaultTransform;
      return _react.default.cloneElement(pathComponent, {
        d: path,
        transform: transform,
        className: className,
        style: style,
        role: role,
        shapeRendering: shapeRendering,
        events: events,
        clipPath: clipPath
      });
    }
  }]);

  return Bar;
}(_react.default.Component);

exports.default = Bar;
Object.defineProperty(Bar, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread({}, _victoryCore.CommonProps.primitiveProps, {
    alignment: _propTypes.default.oneOf(["start", "middle", "end"]),
    barRatio: _propTypes.default.number,
    barWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
    cornerRadius: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func, _propTypes.default.shape({
      top: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
      topLeft: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
      topRight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
      bottom: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
      bottomLeft: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
      bottomRight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func])
    })]),
    datum: _propTypes.default.object,
    getPath: _propTypes.default.func,
    horizontal: _propTypes.default.bool,
    pathComponent: _propTypes.default.element,
    width: _propTypes.default.number,
    x: _propTypes.default.number,
    y: _propTypes.default.number,
    y0: _propTypes.default.number
  })
});
Object.defineProperty(Bar, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    pathComponent: _react.default.createElement(_victoryCore.Path, null),
    defaultBarWidth: 8
  }
});