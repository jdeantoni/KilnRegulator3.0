{"version":3,"sources":["StackViewLayout.tsx"],"names":["React","Animated","StyleSheet","Platform","View","I18nManager","Easing","Dimensions","SceneView","StackActions","NavigationActions","NavigationProvider","ThemeContext","withOrientation","ScreenContainer","PanGestureHandler","State","GestureState","Card","Header","TransitionConfigs","HeaderStyleInterpolator","StackGestureContext","clamp","supportsImprovedSpringAnimation","IPHONE_XS_HEIGHT","IPHONE_XR_HEIGHT","get","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","IS_IPHONE_X","OS","isPad","isTVOS","EaseInOut","inOut","ease","HEADER_LAYOUT_PRESET","HEADER_TRANSITION_PRESET","HEADER_BACKGROUND_TRANSITION_PRESET","ANIMATION_DURATION","POSITION_THRESHOLD","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","USE_NATIVE_DRIVER","getDefaultHeaderHeight","isLandscape","StackViewLayout","props","immediateIndex","handleFloatingHeaderLayout","e","nativeEvent","layout","state","floatingHeaderHeight","setState","handlePanGestureStateChange","oldState","ACTIVE","positionSwitch","__getValue","isMotionVertical","handleReleaseVertical","handleReleaseHorizontal","onGestureBegin","setValue","renderCard","scene","transitionProps","shadowEnabled","cardOverlayEnabled","transparentCard","cardStyle","transitionConfig","screenInterpolator","style","position","options","descriptor","hasHeader","header","headerMode","getHeaderMode","floatingContainerStyle","absoluteFill","headerTransparent","select","web","default","absoluteFillObject","paddingTop","key","renderInnerScene","panGestureRef","createRef","gestureX","Value","gestureY","subtract","gestureSwitch","add","multiply","gestureEvent","event","translationX","translationY","useNativeDriver","__DEV__","Error","isValidElement","renderHeader","headerLeftInterpolator","headerTitleInterpolator","headerRightInterpolator","headerBackgroundInterpolator","backgroundTransitionPresetInterpolator","getHeaderBackgroundTransitionPreset","passProps","navigation","mode","transitionPreset","getHeaderTransitionPreset","layoutPreset","getHeaderLayoutPreset","backTitleVisible","getHeaderBackTitleVisible","leftInterpolator","titleInterpolator","rightInterpolator","backgroundInterpolator","resetToIndex","duration","spring","toValue","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","start","timing","easing","backFromIndex","scenes","Math","max","onCompleteAnimation","backFromScene","find","s","index","dispatch","back","route","immediate","completeTransition","prevProps","prepareGesture","preparePosition","prepareTransitionConfig","prepareAnimated","floatingHeader","styles","gestureActivationCriteria","isGestureEnabled","container","containerStyle","context","containerStyleLight","containerStyleDark","map","prevState","maybeCancelGesture","gestureResponseDistance","userGestureResponseDistance","isModal","vertical","horizontal","getGestureResponseDistance","isMotionInverted","maxDeltaX","minOffsetY","hitSlop","top","bottom","minOffsetX","maxDeltaY","left","right","gesturesEnabled","gestureDirection","isRTL","distance","x","value","y","gesturePosition","undefined","prepareGestureVertical","prepareGestureHorizontal","divide","interpolate","inputRange","outputRange","extrapolate","movementDirection","movedDistance","gestureVelocity","velocityX","defaultVelocity","velocity","abs","resetDuration","goBackDuration","computeHorizontalGestureValue","onGestureCanceled","reset","onGestureEnd","goBack","velocityY","computeVerticalGestureValue","headerBackgroundTransitionPreset","includes","forBackgroundWithFade","forBackgroundWithTranslation","forBackgroundWithInactiveHidden","console","error","join","JSON","stringify","headerLayoutPreset","warn","headerTransitionPreset","headerBackTitleVisible","enabledByDefault","getComponent","SceneComponent","screenProps","getTransitionConfig","lastTransitionProps","Component","contextType","create","flex","flexDirection","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Platform,\n  View,\n  I18nManager,\n  Easing,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  SceneView,\n  StackActions,\n  NavigationActions,\n  NavigationProvider,\n  ThemeContext,\n} from '@react-navigation/core';\n\nimport { withOrientation } from '@react-navigation/native';\nimport { ScreenContainer } from 'react-native-screens';\nimport {\n  PanGestureHandler,\n  State as GestureState,\n  PanGestureHandlerGestureEvent,\n  GestureHandlerGestureEventNativeEvent,\n  PanGestureHandlerEventExtra,\n} from 'react-native-gesture-handler';\n\nimport Card from './StackViewCard';\nimport Header from '../Header/Header';\nimport TransitionConfigs from './StackViewTransitionConfigs';\nimport HeaderStyleInterpolator from '../Header/HeaderStyleInterpolator';\nimport StackGestureContext from '../../utils/StackGestureContext';\nimport clamp from '../../utils/clamp';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\nimport {\n  Scene,\n  HeaderMode,\n  TransitionProps,\n  TransitionConfig,\n  HeaderTransitionConfig,\n  HeaderProps,\n} from '../../types';\n\ntype Props = {\n  mode?: 'modal' | 'card';\n  headerMode?: 'screen' | 'float' | 'none';\n  headerLayoutPreset?: 'left' | 'center';\n  headerTransitionPreset?: 'fade-in-place' | 'uikit';\n  headerBackgroundTransitionPreset?: 'fade' | 'translate' | 'toggle';\n  headerBackTitleVisible?: boolean;\n  isLandscape: boolean;\n  shadowEnabled?: boolean;\n  cardOverlayEnabled?: boolean;\n  transparentCard?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n  transitionProps: TransitionProps;\n  lastTransitionProps?: TransitionProps;\n  transitionConfig?: (\n    transitionProps: TransitionProps,\n    prevTransitionProps?: TransitionProps,\n    isModal?: boolean\n  ) => HeaderTransitionConfig;\n  onGestureBegin?: () => void;\n  onGestureEnd?: () => void;\n  onGestureCanceled?: () => void;\n  screenProps?: unknown;\n};\n\ntype State = {\n  floatingHeaderHeight: number;\n};\n\nconst IPHONE_XS_HEIGHT = 812; // iPhone X and XS\nconst IPHONE_XR_HEIGHT = 896; // iPhone XR and XS Max\nconst { width: WINDOW_WIDTH, height: WINDOW_HEIGHT } = Dimensions.get('window');\nconst IS_IPHONE_X =\n  Platform.OS === 'ios' &&\n  // @ts-ignore\n  !Platform.isPad &&\n  // @ts-ignore\n  !Platform.isTVOS &&\n  (WINDOW_HEIGHT === IPHONE_XS_HEIGHT ||\n    WINDOW_WIDTH === IPHONE_XS_HEIGHT ||\n    WINDOW_HEIGHT === IPHONE_XR_HEIGHT ||\n    WINDOW_WIDTH === IPHONE_XR_HEIGHT);\n\nconst EaseInOut = Easing.inOut(Easing.ease);\n\n/**\n * Enumerate possible values for validation\n */\nconst HEADER_LAYOUT_PRESET = ['center', 'left'];\nconst HEADER_TRANSITION_PRESET = ['fade-in-place', 'uikit'];\nconst HEADER_BACKGROUND_TRANSITION_PRESET = ['toggle', 'fade', 'translate'];\n\n/**\n * The max duration of the card animation in milliseconds after released gesture.\n * The actual duration should be always less then that because the rest distance\n * is always less then the full distance of the layout.\n */\nconst ANIMATION_DURATION = 500;\n\n/**\n * The gesture distance threshold to trigger the back behavior. For instance,\n * `1/2` means that moving greater than 1/2 of the width of the screen will\n * trigger a back action\n */\nconst POSITION_THRESHOLD = 1 / 2;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst USE_NATIVE_DRIVER = true;\n\nconst getDefaultHeaderHeight = (isLandscape: boolean) => {\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else if (IS_IPHONE_X) {\n      return 88;\n    } else {\n      return 64;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nclass StackViewLayout extends React.Component<Props, State> {\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n\n  private panGestureRef: React.RefObject<PanGestureHandler>;\n  private gestureX: Animated.Value;\n  private gestureY: Animated.Value;\n  private positionSwitch: Animated.Value;\n  private gestureSwitch: Animated.AnimatedInterpolation;\n  private gestureEvent: (...args: any[]) => void;\n  private gesturePosition: Animated.AnimatedInterpolation | undefined;\n\n  // @ts-ignore\n  private position: Animated.Value;\n\n  /**\n   * immediateIndex is used to represent the expected index that we will be on after a\n   * transition. To achieve a smooth animation when swiping back, the action to go back\n   * doesn't actually fire until the transition completes. The immediateIndex is used during\n   * the transition so that gestures can be handled correctly. This is a work-around for\n   * cases when the user quickly swipes back several times.\n   */\n  private immediateIndex: number | null = null;\n  private transitionConfig:\n    | HeaderTransitionConfig & TransitionConfig\n    | undefined;\n  private prevProps: Props | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.panGestureRef = React.createRef();\n    this.gestureX = new Animated.Value(0);\n    this.gestureY = new Animated.Value(0);\n    this.positionSwitch = new Animated.Value(1);\n    if (Animated.subtract) {\n      this.gestureSwitch = Animated.subtract(1, this.positionSwitch);\n    } else {\n      this.gestureSwitch = Animated.add(\n        1,\n        Animated.multiply(-1, this.positionSwitch)\n      );\n    }\n    this.gestureEvent = Animated.event(\n      [\n        {\n          nativeEvent: {\n            translationX: this.gestureX,\n            translationY: this.gestureY,\n          },\n        },\n      ],\n      {\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }\n    );\n\n    this.state = {\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      floatingHeaderHeight: getDefaultHeaderHeight(props.isLandscape),\n    };\n  }\n\n  private renderHeader(scene: Scene, headerMode: HeaderMode) {\n    const { options } = scene.descriptor;\n    const { header } = options;\n\n    if (__DEV__ && typeof header === 'string') {\n      throw new Error(\n        `Invalid header value: \"${header}\". The header option must be a valid React component or null, not a string.`\n      );\n    }\n\n    if (header === null && headerMode === 'screen') {\n      return null;\n    }\n\n    // check if it's a react element\n    if (React.isValidElement(header)) {\n      return header;\n    }\n\n    // Handle the case where the header option is a function, and provide the default\n    const renderHeader =\n      // @ts-ignore TS warns about missing props, but they are in default props\n      header || ((props: HeaderProps) => <Header {...props} />);\n\n    let {\n      headerLeftInterpolator,\n      headerTitleInterpolator,\n      headerRightInterpolator,\n      headerBackgroundInterpolator,\n    } = this.transitionConfig as HeaderTransitionConfig;\n\n    const backgroundTransitionPresetInterpolator = this.getHeaderBackgroundTransitionPreset();\n    if (backgroundTransitionPresetInterpolator) {\n      headerBackgroundInterpolator = backgroundTransitionPresetInterpolator;\n    }\n\n    const { transitionProps, ...passProps } = this.props;\n\n    return (\n      <NavigationProvider value={scene.descriptor.navigation}>\n        {renderHeader({\n          ...passProps,\n          ...transitionProps,\n          position: this.position,\n          scene,\n          mode: headerMode,\n          transitionPreset: this.getHeaderTransitionPreset(),\n          layoutPreset: this.getHeaderLayoutPreset(),\n          backTitleVisible: this.getHeaderBackTitleVisible(),\n          leftInterpolator: headerLeftInterpolator,\n          titleInterpolator: headerTitleInterpolator,\n          rightInterpolator: headerRightInterpolator,\n          backgroundInterpolator: headerBackgroundInterpolator,\n        })}\n      </NavigationProvider>\n    );\n  }\n\n  private reset(resetToIndex: number, duration: number) {\n    if (Platform.OS === 'ios' && supportsImprovedSpringAnimation()) {\n      // @ts-ignore\n      Animated.spring(this.props.transitionProps.position, {\n        toValue: resetToIndex,\n        stiffness: 6000,\n        damping: 100,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start();\n    } else {\n      // @ts-ignore\n      Animated.timing(this.props.transitionProps.position, {\n        toValue: resetToIndex,\n        duration,\n        easing: EaseInOut,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start();\n    }\n  }\n\n  private goBack(backFromIndex: number, duration: number) {\n    const { navigation, position, scenes } = this.props.transitionProps;\n    const toValue = Math.max(backFromIndex - 1, 0);\n\n    // set temporary index for gesture handler to respect until the action is\n    // dispatched at the end of the transition.\n    this.immediateIndex = toValue;\n\n    const onCompleteAnimation = () => {\n      this.immediateIndex = null;\n      const backFromScene = scenes.find(s => s.index === toValue + 1);\n      if (backFromScene) {\n        navigation.dispatch(\n          NavigationActions.back({\n            key: backFromScene.route.key,\n            immediate: true,\n          })\n        );\n        navigation.dispatch(StackActions.completeTransition());\n      }\n    };\n\n    if (Platform.OS === 'ios' && supportsImprovedSpringAnimation()) {\n      // @ts-ignore\n      Animated.spring(position, {\n        toValue,\n        stiffness: 7000,\n        damping: 300,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start(onCompleteAnimation);\n    } else {\n      // @ts-ignore\n      Animated.timing(position, {\n        toValue,\n        duration,\n        easing: EaseInOut,\n        useNativeDriver: USE_NATIVE_DRIVER,\n      }).start(onCompleteAnimation);\n    }\n  }\n\n  private handleFloatingHeaderLayout = (e: LayoutChangeEvent) => {\n    const { height } = e.nativeEvent.layout;\n    if (height !== this.state.floatingHeaderHeight) {\n      this.setState({ floatingHeaderHeight: height });\n    }\n  };\n\n  private prepareAnimated() {\n    if (this.props === this.prevProps) {\n      return;\n    }\n    this.prevProps = this.props;\n\n    this.prepareGesture();\n    this.preparePosition();\n    this.prepareTransitionConfig();\n  }\n\n  render() {\n    this.prepareAnimated();\n\n    const { transitionProps } = this.props;\n    const {\n      navigation: {\n        state: { index },\n      },\n      scenes,\n    } = transitionProps;\n\n    const headerMode = this.getHeaderMode();\n    let floatingHeader = null;\n    if (headerMode === 'float') {\n      const { scene } = transitionProps;\n      floatingHeader = (\n        <View\n          style={styles.floatingHeader}\n          pointerEvents=\"box-none\"\n          onLayout={this.handleFloatingHeaderLayout}\n        >\n          {this.renderHeader(scene, headerMode)}\n        </View>\n      );\n    }\n\n    return (\n      <PanGestureHandler\n        {...this.gestureActivationCriteria()}\n        ref={this.panGestureRef}\n        onGestureEvent={this.gestureEvent}\n        onHandlerStateChange={this.handlePanGestureStateChange}\n        enabled={index > 0 && this.isGestureEnabled()}\n      >\n        <Animated.View\n          style={[\n            styles.container,\n            this.transitionConfig!.containerStyle,\n            this.context === 'light'\n              ? this.transitionConfig!.containerStyleLight\n              : this.transitionConfig!.containerStyleDark,\n          ]}\n        >\n          <StackGestureContext.Provider value={this.panGestureRef}>\n            <ScreenContainer style={styles.scenes}>\n              {scenes.map(this.renderCard)}\n            </ScreenContainer>\n            {floatingHeader}\n          </StackGestureContext.Provider>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { state: prevState } = prevProps.transitionProps.navigation;\n    const { state } = this.props.transitionProps.navigation;\n    if (prevState.index !== state.index) {\n      this.maybeCancelGesture();\n    }\n  }\n\n  private getGestureResponseDistance() {\n    const { scene } = this.props.transitionProps;\n    const { options } = scene.descriptor;\n    const {\n      gestureResponseDistance: userGestureResponseDistance = {} as {\n        vertical?: number;\n        horizontal?: number;\n      },\n    } = options;\n\n    // Doesn't make sense for a response distance of 0, so this works fine\n    return this.isModal()\n      ? userGestureResponseDistance.vertical ||\n          GESTURE_RESPONSE_DISTANCE_VERTICAL\n      : userGestureResponseDistance.horizontal ||\n          GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n  }\n\n  private gestureActivationCriteria() {\n    const { layout } = this.props.transitionProps;\n    const gestureResponseDistance = this.getGestureResponseDistance();\n    const isMotionInverted = this.isMotionInverted();\n\n    if (this.isMotionVertical()) {\n      // @ts-ignore\n      const height: number = layout.height.__getValue();\n\n      return {\n        maxDeltaX: 15,\n        minOffsetY: isMotionInverted ? -5 : 5,\n        hitSlop: isMotionInverted\n          ? { top: -height + gestureResponseDistance }\n          : { bottom: -height + gestureResponseDistance },\n      };\n    } else {\n      // @ts-ignore\n      const width: number = layout.width.__getValue();\n      const hitSlop = -width + gestureResponseDistance;\n\n      return {\n        minOffsetX: isMotionInverted ? -5 : 5,\n        maxDeltaY: 20,\n        hitSlop: isMotionInverted ? { left: hitSlop } : { right: hitSlop },\n      };\n    }\n  }\n\n  private isGestureEnabled() {\n    const gesturesEnabled = this.props.transitionProps.scene.descriptor.options\n      .gesturesEnabled;\n    return typeof gesturesEnabled === 'boolean'\n      ? gesturesEnabled\n      : Platform.OS === 'ios';\n  }\n\n  private isMotionVertical() {\n    return this.isModal();\n  }\n\n  private isModal() {\n    return this.props.mode === 'modal';\n  }\n\n  // This only currently applies to the horizontal gesture!\n  private isMotionInverted() {\n    const {\n      transitionProps: { scene },\n    } = this.props;\n    const { options } = scene.descriptor;\n    const { gestureDirection } = options;\n\n    if (this.isModal()) {\n      return gestureDirection === 'inverted';\n    } else {\n      return typeof gestureDirection === 'string'\n        ? gestureDirection === 'inverted'\n        : I18nManager.isRTL;\n    }\n  }\n\n  private computeHorizontalGestureValue({\n    translationX,\n  }: {\n    translationX: number;\n  }) {\n    const {\n      transitionProps: { navigation, layout },\n    } = this.props;\n\n    const { index } = navigation.state;\n\n    // TODO: remove this __getValue!\n    // @ts-ignore\n    const distance: number = layout.width.__getValue();\n\n    const x = this.isMotionInverted() ? -1 * translationX : translationX;\n\n    const value = index - x / distance;\n    return clamp(index - 1, value, index);\n  }\n\n  private computeVerticalGestureValue({\n    translationY,\n  }: {\n    translationY: number;\n  }) {\n    const {\n      transitionProps: { navigation, layout },\n    } = this.props;\n\n    const { index } = navigation.state;\n\n    // TODO: remove this __getValue!\n    // @ts-ignore\n    const distance: number = layout.height.__getValue();\n\n    const y = this.isMotionInverted() ? -1 * translationY : translationY;\n    const value = index - y / distance;\n    return clamp(index - 1, value, index);\n  }\n\n  private handlePanGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    // @ts-ignore\n    if (nativeEvent.oldState === GestureState.ACTIVE) {\n      // Gesture was cancelled! For example, some navigation state update\n      // arrived while the gesture was active that cancelled it out\n      // @ts-ignore\n      if (this.positionSwitch.__getValue() === 1) {\n        return;\n      }\n\n      if (this.isMotionVertical()) {\n        this.handleReleaseVertical(nativeEvent);\n      } else {\n        this.handleReleaseHorizontal(nativeEvent);\n      }\n    } else if (nativeEvent.state === GestureState.ACTIVE) {\n      this.props.onGestureBegin && this.props.onGestureBegin();\n\n      // Switch to using gesture position\n      this.positionSwitch.setValue(0);\n\n      // By enabling the gesture switch and ignoring the position here we\n      // end up with a quick jump to the initial value and then back to the\n      // gesture. While this isn't ideal, it's preferred over preventing new\n      // gestures during the animation (all gestures should be interruptible)\n      // and we will properly fix it (interruptible and from the correct position)\n      // when we integrate reanimated. If you prefer to prevent gestures during\n      // transitions, then fork this library, comment the positionSwitch value set above,\n      // and uncomment the following two lines.\n      // if (!this.props.transitionProps.position._animation) {\n      //   this.positionSwitch.setValue(0);\n      // }\n    }\n  };\n\n  // note: this will not animated so nicely because the position is unaware\n  // of the gesturePosition, so if we are in the middle of swiping the screen away\n  // and back is programatically fired then we will reset to the initial position\n  // and animate from there\n  private maybeCancelGesture() {\n    this.positionSwitch.setValue(1);\n  }\n\n  private prepareGesture() {\n    if (!this.isGestureEnabled()) {\n      // @ts-ignore\n      if (this.positionSwitch.__getValue() !== 1) {\n        this.positionSwitch.setValue(1);\n      }\n      this.gesturePosition = undefined;\n      return;\n    }\n\n    // We can't run the gesture if width or height layout is unavailable\n    if (\n      // @ts-ignore\n      this.props.transitionProps.layout.width.__getValue() === 0 ||\n      // @ts-ignore\n      this.props.transitionProps.layout.height.__getValue() === 0\n    ) {\n      return;\n    }\n\n    if (this.isMotionVertical()) {\n      this.prepareGestureVertical();\n    } else {\n      this.prepareGestureHorizontal();\n    }\n  }\n\n  private prepareGestureHorizontal() {\n    const { index } = this.props.transitionProps.navigation.state;\n\n    if (this.isMotionInverted()) {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.divide(this.gestureX, this.props.transitionProps.layout.width)\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    } else {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.multiply(\n          -1,\n          Animated.divide(\n            this.gestureX,\n            this.props.transitionProps.layout.width\n          )\n        )\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    }\n  }\n\n  private prepareGestureVertical() {\n    const { index } = this.props.transitionProps.navigation.state;\n\n    if (this.isMotionInverted()) {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.divide(this.gestureY, this.props.transitionProps.layout.height)\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    } else {\n      this.gesturePosition = Animated.add(\n        index,\n        Animated.multiply(\n          -1,\n          Animated.divide(\n            this.gestureY,\n            this.props.transitionProps.layout.height\n          )\n        )\n      ).interpolate({\n        inputRange: [index - 1, index],\n        outputRange: [index - 1, index],\n        extrapolate: 'clamp',\n      });\n    }\n  }\n\n  private handleReleaseHorizontal(\n    nativeEvent: GestureHandlerGestureEventNativeEvent &\n      PanGestureHandlerEventExtra\n  ) {\n    const {\n      transitionProps: { navigation, position, layout },\n    } = this.props;\n    const { index } = navigation.state;\n    const immediateIndex =\n      this.immediateIndex == null ? index : this.immediateIndex;\n\n    // Calculate animate duration according to gesture speed and moved distance\n    // @ts-ignore\n    const distance = layout.width.__getValue();\n    const movementDirection = this.isMotionInverted() ? -1 : 1;\n    const movedDistance = movementDirection * nativeEvent.translationX;\n    const gestureVelocity = movementDirection * nativeEvent.velocityX;\n    const defaultVelocity = distance / ANIMATION_DURATION;\n    const velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n    const resetDuration = this.isMotionInverted()\n      ? (distance - movedDistance) / velocity\n      : movedDistance / velocity;\n    const goBackDuration = this.isMotionInverted()\n      ? movedDistance / velocity\n      : (distance - movedDistance) / velocity;\n\n    // Get the current position value and reset to using the statically driven\n    // (rather than gesture driven) position.\n    const value = this.computeHorizontalGestureValue(nativeEvent);\n    position.setValue(value);\n    this.positionSwitch.setValue(1);\n\n    // If the speed of the gesture release is significant, use that as the indication\n    // of intent\n    if (gestureVelocity < -50) {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n      return;\n    }\n    if (gestureVelocity > 50) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n      return;\n    }\n\n    // Then filter based on the distance the screen was moved. Over a third of the way swiped,\n    // and the back will happen.\n    if (value <= index - POSITION_THRESHOLD) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n    } else {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n    }\n  }\n\n  private handleReleaseVertical(\n    nativeEvent: GestureHandlerGestureEventNativeEvent &\n      PanGestureHandlerEventExtra\n  ) {\n    const {\n      transitionProps: { navigation, position, layout },\n    } = this.props;\n    const { index } = navigation.state;\n    const immediateIndex =\n      this.immediateIndex == null ? index : this.immediateIndex;\n\n    // Calculate animate duration according to gesture speed and moved distance\n    // @ts-ignore\n    const distance = layout.height.__getValue();\n    const isMotionInverted = this.isMotionInverted();\n    const movementDirection = isMotionInverted ? -1 : 1;\n    const movedDistance = movementDirection * nativeEvent.translationY;\n    const gestureVelocity = movementDirection * nativeEvent.velocityY;\n    const defaultVelocity = distance / ANIMATION_DURATION;\n    const velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n    const resetDuration = isMotionInverted\n      ? (distance - movedDistance) / velocity\n      : movedDistance / velocity;\n    const goBackDuration = isMotionInverted\n      ? movedDistance / velocity\n      : (distance - movedDistance) / velocity;\n\n    const value = this.computeVerticalGestureValue(nativeEvent);\n    position.setValue(value);\n    this.positionSwitch.setValue(1);\n\n    // If the speed of the gesture release is significant, use that as the indication\n    // of intent\n    if (gestureVelocity < -50) {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n      return;\n    }\n    if (gestureVelocity > 50) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n      return;\n    }\n\n    // Then filter based on the distance the screen was moved. Over a third of the way swiped,\n    // and the back will happen.\n    if (value <= index - POSITION_THRESHOLD) {\n      this.props.onGestureEnd && this.props.onGestureEnd();\n      this.goBack(immediateIndex, goBackDuration);\n    } else {\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n      this.reset(immediateIndex, resetDuration);\n    }\n  }\n\n  private getHeaderMode() {\n    if (this.props.headerMode) {\n      return this.props.headerMode;\n    }\n    if (Platform.OS === 'android' || this.props.mode === 'modal') {\n      return 'screen';\n    }\n    // On web, the float header mode will enable body scrolling and stick the header\n    // to the top of the URL bar when it shrinks and expands.\n    return 'float';\n  }\n\n  private getHeaderBackgroundTransitionPreset() {\n    const { headerBackgroundTransitionPreset } = this.props;\n    if (headerBackgroundTransitionPreset) {\n      if (\n        HEADER_BACKGROUND_TRANSITION_PRESET.includes(\n          headerBackgroundTransitionPreset\n        )\n      ) {\n        if (headerBackgroundTransitionPreset === 'fade') {\n          return HeaderStyleInterpolator.forBackgroundWithFade;\n        } else if (headerBackgroundTransitionPreset === 'translate') {\n          return HeaderStyleInterpolator.forBackgroundWithTranslation;\n        } else if (headerBackgroundTransitionPreset === 'toggle') {\n          return HeaderStyleInterpolator.forBackgroundWithInactiveHidden;\n        }\n      } else if (__DEV__) {\n        console.error(\n          `Invalid configuration applied for headerBackgroundTransitionPreset - expected one of ${HEADER_BACKGROUND_TRANSITION_PRESET.join(\n            ', '\n          )} but received ${JSON.stringify(headerBackgroundTransitionPreset)}`\n        );\n      }\n    }\n\n    return null;\n  }\n\n  private getHeaderLayoutPreset() {\n    const { headerLayoutPreset } = this.props;\n    if (headerLayoutPreset) {\n      if (__DEV__) {\n        if (\n          this.getHeaderTransitionPreset() === 'uikit' &&\n          headerLayoutPreset === 'left' &&\n          Platform.OS === 'ios'\n        ) {\n          console.warn(\n            `headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'`\n          );\n        }\n      }\n      if (HEADER_LAYOUT_PRESET.includes(headerLayoutPreset)) {\n        return headerLayoutPreset;\n      }\n\n      if (__DEV__) {\n        console.error(\n          `Invalid configuration applied for headerLayoutPreset - expected one of ${HEADER_LAYOUT_PRESET.join(\n            ', '\n          )} but received ${JSON.stringify(headerLayoutPreset)}`\n        );\n      }\n    }\n\n    if (Platform.OS !== 'ios') {\n      return 'left';\n    } else {\n      return 'center';\n    }\n  }\n\n  private getHeaderTransitionPreset() {\n    // On Android or with header mode screen, we always just use in-place,\n    // we ignore the option entirely (at least until we have other presets)\n    if (Platform.OS !== 'ios' || this.getHeaderMode() === 'screen') {\n      return 'fade-in-place';\n    }\n\n    const { headerTransitionPreset } = this.props;\n    if (headerTransitionPreset) {\n      if (HEADER_TRANSITION_PRESET.includes(headerTransitionPreset)) {\n        return headerTransitionPreset;\n      }\n\n      if (__DEV__) {\n        console.error(\n          `Invalid configuration applied for headerTransitionPreset - expected one of ${HEADER_TRANSITION_PRESET.join(\n            ', '\n          )} but received ${JSON.stringify(headerTransitionPreset)}`\n        );\n      }\n    }\n\n    return 'fade-in-place';\n  }\n\n  private getHeaderBackTitleVisible() {\n    const { headerBackTitleVisible } = this.props;\n    const layoutPreset = this.getHeaderLayoutPreset();\n\n    // Even when we align to center on Android, people should need to opt-in to\n    // showing the back title\n    const enabledByDefault = !(\n      layoutPreset === 'left' || Platform.OS !== 'ios'\n    );\n\n    return typeof headerBackTitleVisible === 'boolean'\n      ? headerBackTitleVisible\n      : enabledByDefault;\n  }\n\n  private renderInnerScene(scene: Scene) {\n    const { navigation, getComponent } = scene.descriptor;\n    const SceneComponent = getComponent();\n\n    const { screenProps } = this.props;\n    const headerMode = this.getHeaderMode();\n    if (headerMode === 'screen') {\n      return (\n        <View style={styles.container}>\n          <View style={styles.scenes}>\n            <SceneView\n              screenProps={screenProps}\n              navigation={navigation}\n              component={SceneComponent}\n            />\n          </View>\n          {this.renderHeader(scene, headerMode)}\n        </View>\n      );\n    }\n    return (\n      <SceneView\n        screenProps={screenProps}\n        navigation={navigation}\n        component={SceneComponent}\n      />\n    );\n  }\n\n  private prepareTransitionConfig() {\n    this.transitionConfig = TransitionConfigs.getTransitionConfig(\n      this.props.transitionConfig,\n      {\n        ...this.props.transitionProps,\n        position: this.position,\n      },\n      this.props.lastTransitionProps,\n      this.isModal()\n    );\n  }\n\n  private preparePosition() {\n    if (this.gesturePosition) {\n      // FIXME: this doesn't seem right, there is setValue called in some places\n      // @ts-ignore\n      this.position = Animated.add(\n        Animated.multiply(\n          this.props.transitionProps.position,\n          this.positionSwitch\n        ),\n        Animated.multiply(this.gesturePosition, this.gestureSwitch)\n      );\n    } else {\n      this.position = this.props.transitionProps.position;\n    }\n  }\n\n  private renderCard = (scene: Scene) => {\n    const {\n      transitionProps,\n      shadowEnabled,\n      cardOverlayEnabled,\n      transparentCard,\n      cardStyle,\n    } = this.props;\n\n    const { screenInterpolator } = this.transitionConfig as TransitionConfig;\n    const style =\n      screenInterpolator &&\n      screenInterpolator({\n        ...transitionProps,\n        shadowEnabled,\n        cardOverlayEnabled,\n        position: this.position,\n        scene,\n      });\n\n    // When using a floating header, we need to add some top\n    // padding on the scene.\n    const { options } = scene.descriptor;\n    const hasHeader = options.header !== null;\n    const headerMode = this.getHeaderMode();\n\n    let floatingContainerStyle: ViewStyle = StyleSheet.absoluteFill as ViewStyle;\n\n    if (hasHeader && headerMode === 'float' && !options.headerTransparent) {\n      floatingContainerStyle = {\n        ...Platform.select({ web: {}, default: StyleSheet.absoluteFillObject }),\n        paddingTop: this.state.floatingHeaderHeight,\n      };\n    }\n\n    return (\n      <Card\n        {...transitionProps}\n        key={`card_${scene.key}`}\n        position={this.position}\n        realPosition={transitionProps.position}\n        animatedStyle={style}\n        transparent={transparentCard}\n        style={[floatingContainerStyle, cardStyle]}\n        scene={scene}\n      >\n        {this.renderInnerScene(scene)}\n      </Card>\n    );\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // Header is physically rendered after scenes so that Header won't be\n    // covered by the shadows of the scenes.\n    // That said, we'd have use `flexDirection: 'column-reverse'` to move\n    // Header above the scenes.\n    flexDirection: 'column-reverse',\n    overflow: 'hidden',\n  },\n  scenes: {\n    flex: 1,\n  },\n  floatingHeader: {\n    // @ts-ignore\n    position: Platform.select({ default: 'absolute', web: 'fixed' }),\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nexport default withOrientation(StackViewLayout);\n"]}